/*
Deployment script for PARM_DW

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "PARM_DW"
:setvar DefaultFilePrefix "PARM_DW"
:setvar DefaultDataPath "F:\SQLData\"
:setvar DefaultLogPath "F:\SQLLog\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE Latin1_General_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [Dimension]...';


GO
CREATE SCHEMA [Dimension]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Fact]...';


GO
CREATE SCHEMA [Fact]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Dimension].[BalanceSheetItems]...';


GO
CREATE TABLE [Dimension].[BalanceSheetItems] (
    [BalanceSheetItemSK] INT           NOT NULL,
    [BalanceSheetName]   VARCHAR (255) NOT NULL
);


GO
PRINT N'Creating [Dimension].[BudgetAccounts]...';


GO
CREATE TABLE [Dimension].[BudgetAccounts] (
    [AccountSK]   INT           IDENTITY (1, 1) NOT NULL,
    [AccountName] VARCHAR (255) NOT NULL,
    [AccountType] VARCHAR (255) NOT NULL
);


GO
PRINT N'Creating [Dimension].[BudgetItems]...';


GO
CREATE TABLE [Dimension].[BudgetItems] (
    [ItemSK]       INT           IDENTITY (1, 1) NOT NULL,
    [ItemName]     VARCHAR (255) NOT NULL,
    [ItemCategory] VARCHAR (255) NOT NULL
);


GO
PRINT N'Creating [Dimension].[FinancialRatios]...';


GO
CREATE TABLE [Dimension].[FinancialRatios] (
    [ItemSK] INT NOT NULL
);


GO
PRINT N'Creating [Fact].[BalanceSheetMeasures]...';


GO
CREATE TABLE [Fact].[BalanceSheetMeasures] (
    [BalanceSheetItemSK] INT      NOT NULL,
    [AssetOrLiability]   CHAR (1) NOT NULL,
    [BalanceSheetValue]  MONEY    NOT NULL
);


GO
PRINT N'Creating [Fact].[BudgetMeasures]...';


GO
CREATE TABLE [Fact].[BudgetMeasures] (
    [DateSK]            INT   NOT NULL,
    [AccountSK]         INT   NOT NULL,
    [ItemSK]            INT   NOT NULL,
    [WeeklyAmount]      MONEY NOT NULL,
    [FortnightlyAmount] AS    ([WeeklyAmount] * (2)) PERSISTED,
    [MonthlyAmount]     AS    (([WeeklyAmount] * (52)) / (12)) PERSISTED,
    [YearlyAmount]      AS    ([WeeklyAmount] * (52)) PERSISTED
);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

/* Static Data Inserts */

SET IDENTITY_INSERT [Dimension].[BudgetAccounts] ON 

INSERT [Dimension].[BudgetAccounts] ([AccountSK], [AccountName], [AccountType]) VALUES (1, N'Income', N'Everyday')
INSERT [Dimension].[BudgetAccounts] ([AccountSK], [AccountName], [AccountType]) VALUES (2, N'Expense', N'Everyday')
INSERT [Dimension].[BudgetAccounts] ([AccountSK], [AccountName], [AccountType]) VALUES (3, N'Credit', N'Mastercard')
INSERT [Dimension].[BudgetAccounts] ([AccountSK], [AccountName], [AccountType]) VALUES (4, N'Food', N'Everyday')
INSERT [Dimension].[BudgetAccounts] ([AccountSK], [AccountName], [AccountType]) VALUES (5, N'Personal Expense', N'Cheque')
INSERT [Dimension].[BudgetAccounts] ([AccountSK], [AccountName], [AccountType]) VALUES (6, N'Commsec', N'Trading Settlement')
INSERT [Dimension].[BudgetAccounts] ([AccountSK], [AccountName], [AccountType]) VALUES (7, N'Personal Savings', N'Award Saver')
INSERT [Dimension].[BudgetAccounts] ([AccountSK], [AccountName], [AccountType]) VALUES (8, N'Investment Savings', N'Award Saver')
SET IDENTITY_INSERT [Dimension].[BudgetAccounts] OFF

SET IDENTITY_INSERT [Dimension].[BudgetItems] ON 

INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (1, N'Credit', N'Debt')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (2, N'Aaron Personal', N'Aaron')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (3, N'Personal Savings', N'Aaron')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (4, N'Savings', N'Investment')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (5, N'Health Insurance', N'Insurance')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (6, N'Rent', N'Housing')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (7, N'Mobile', N'Communication')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (8, N'Contents Insurance', N'Insurance')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (9, N'Food', N'Food')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (10, N'Train', N'Travel')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (11, N'Gym', N'Fitness')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (12, N'Petrol', N'Travel')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (13, N'Telstra', N'Communication')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (14, N'Lexus', N'Debt')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (15, N'Lexus Insurance', N'Insurance')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (16, N'Ford Insurance', N'Insurance')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (17, N'AFR', N'Business')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (18, N'Spotify', N'Discretionary')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (19, N'Gas', N'Utilities')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (20, N'Barking Cat', N'Business')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (21, N'Electricity', N'Utilities')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (22, N'Tolls', N'Travel')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (23, N'Fees', N'Fees')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (24, N'Car Expense', N'Travel')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (25, N'Gifts', N'Discretionary')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (26, N'Net Income', N'Income')
INSERT [Dimension].[BudgetItems] ([ItemSK], [ItemName], [ItemCategory]) VALUES (27, N'Transfer', N'Expenses')
SET IDENTITY_INSERT [Dimension].[BudgetItems] OFF


/* Test Data */
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 1, 26, 1900.0000)
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 1, 1, -7.5000)
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 1, 27, -40.0000)
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 1, 27, -900.0000)
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 1, 3, -75.0000)
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 1, 4, -725.0000)
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 1, 9, -150.0000)
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 1, 23, -2.5000)
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 2, 5, -25.0000)
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 2, 6, -465.0000)
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 2, 7, -40.0000)
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 2, 8, -12.5000)
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 2, 10, -40.0000)
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 2, 11, -21.0000)
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 2, 13, -28.7500)
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 2, 14, -128.0000)
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 2, 15, -20.0000)
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 2, 16, -20.0000)
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 2, 17, -14.7500)
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 2, 18, -4.0000)
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 2, 19, -7.5000)
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 2, 20, -28.6700)
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 2, 21, -12.5000)
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 2, 22, -5.0000)
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 2, 23, -2.5000)
INSERT [Fact].[BudgetMeasures] ([DateSK], [AccountSK], [ItemSK], [WeeklyAmount]) VALUES (20150421, 2, 27, 900.0000)

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
